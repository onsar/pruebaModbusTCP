#!/usr/bin/env python
"""
Pymodbus Payload Building/Decoding Example
--------------------------------------------------------------------------

# Run modbus-payload-server.py or synchronous-server.py to check the behavior
"""
from pymodbus.constants import Endian
from pymodbus.payload import BinaryPayloadDecoder
from pymodbus.payload import BinaryPayloadBuilder
from pymodbus.client.sync import ModbusTcpClient as ModbusClient
from pymodbus.compat import iteritems
from collections import OrderedDict

# --------------------------------------------------------------------------- #
# configure the client logging
# --------------------------------------------------------------------------- #

import logging
FORMAT = ('%(asctime)-15s %(threadName)-15s'
          ' %(levelname)-8s %(module)-15s:%(lineno)-8s %(message)s')
logging.basicConfig(format=FORMAT)
log = logging.getLogger()
log.setLevel(logging.INFO)


def run_binary_payload_ex():
    # ----------------------------------------------------------------------- #
    # We are going to use a simple client to send our requests
    # ----------------------------------------------------------------------- #
    client = ModbusClient('192.168.1.160', port=5020)
    client.connect()


    # ----------------------------------------------------------------------- #
    builder = BinaryPayloadBuilder(byteorder=Endian.Big,
                                   wordorder=Endian.Big)

    builder.add_32bit_float(-44.44)
    payload = builder.to_registers()
    print(payload)
    payload = builder.build()
    address = 40091
    client.write_registers(address, payload, skip_encode=True, unit=1)

    builder.reset()
    builder.add_32bit_float(-55.11)
    payload = builder.to_registers()
    print(payload)
    payload = builder.build()
    address = 40095
    client.write_registers(address, payload, skip_encode=True, unit=1)

    builder.reset()
    builder.add_32bit_float(-66.11)
    payload = builder.to_registers()
    print(payload)
    payload = builder.build()
    address = 40097
    client.write_registers(address, payload, skip_encode=True, unit=1)

    builder.reset()
    builder.add_32bit_float(-77.11)
    payload = builder.to_registers()
    print(payload)
    payload = builder.build()
    address = 40101
    client.write_registers(address, payload, skip_encode=True, unit=1)

    builder.reset()
    builder.add_32bit_float(-88.11)
    payload = builder.to_registers()
    print(payload)
    payload = builder.build()
    address = 40107
    client.write_registers(address, payload, skip_encode=True, unit=1)

    builder.reset()
    builder.add_32bit_uint(0x53756e53)
    payload = builder.to_registers()
    print(payload)
    payload = builder.build()
    address = 40000
    client.write_registers(address, payload, skip_encode=True, unit=1)













    # ----------------------------------------------------------------------- #
    # close the client
    # ----------------------------------------------------------------------- #
    client.close()


if __name__ == "__main__":
    run_binary_payload_ex()
